calcul.indicatori.varianta = function(varianta){
n = length(varianta)
varianta.cum = cumsum(varianta)
proc = varianta*100/n
procent.cum = cumsum(proc)
return(data.frame(Varianta = varianta,
Varianta.cumulata = varianta.cum,
Procent = proc,
Procent.cumulat = procent.cum))
}
install.packages("http://ip.ase.ro/adPackage_0.1.0.zip",repos = NULL,type = "win.binary" );
adPackage::verificare.pachete(p.loc = c("jGraphics","rGraphics"),
p.cran = c("dplyr","psych","sf"),
url.loc = "http://ip.ase.ro");
a=2;
b=3
c=mean(a);
varianta = c(1,2,3,4,5,6);
rezul=calcul.indicatori.varianta(varianta);
rGraphics::scatterplot(X = list(rezul[,1:2]),
titlu = "Plot instante in spatiul 1X2 - Componente",
titluX = "Componenta 1",
titluY = "Componenta 2", asp=TRUE)
t=909
calcul.indicatori.varianta = function(varianta){
n = length(varianta);
varianta.cum = cumsum(varianta);
proc = varianta*100/n;
procent.cum = cumsum(proc);
return(data.frame(Varianta = varianta,
Varianta.cumulata = varianta.cum,
Procent = proc,
Procent.cumulat = procent.cum));
}
multiLinii = function(X,titlu="",titluX="",titluY="",legenda=FALSE){
tryCatch(
{
dev.new(noRStudioGD = T);
ylim = range(X);
m = ncol(X);
n = nrow(X);
culori = rainbow(m);
plot(x = X[,1],xlab = titluX,ylab = titluY,main = titlu,type = "n",ylim = ylim,
xaxt="n",lwd=2);
axis(side = 1,at=1:n,labels = rownames(X),las=2);
for(i in 1:m){
lines(x = X[,i],col=culori[i],lwd=2);
}
if(legenda){
legend(locator(1),fill = culori,legend = names(X));
}
abline(h=1,col="green",lwd=2);
},
error=function(e){
stop(paste("Eroare trasare multilinii!",e));
}
)
points(x=X);
m = length(X);
d = X[1:(m-1)]-X[2:m];
eps = d[1:(m-2)]-d[2:(m-1)];
j = which(eps<0);
abline(h = X[j[1]+1],col="blue",lwd=2);
}
install.packages("http://ip.ase.ro/adPackage_0.1.0.zip",repos = NULL,type = "win.binary" );
adPackage::verificare.pachete(p.loc = c("jGraphics","rGraphics"),
p.cran = c("dplyr","psych","sf"),
url.loc = "http://ip.ase.ro");
fisier = "Date Brute/DateNivelTrai.csv"
tabel.date = read.csv(file = fisier,row.names = 1)
k = names(tabel.date)[1:9] #ce variabile voi folosi
rezultat.ACP = princomp(x=tabel.date[,k],cor = TRUE)
standard.dev.componente = rezultat.ACP$sdev #valorile eigen
variance.components = standard.dev.componente^2
variance.table =
variance.table =
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
rm(list = ls())
fisier = "Date Brute/DateNivelTrai.csv"
#data frame-ul folosit pentru a retine datele
tabel.date = read.csv(file = fisier)
cheieP = names(tabel.date)[1]
#citire fara numele coloanei 1
tabel.date = read.csv(file = fisier,row.names = 1)
#aliminare NA
tabel.date = adPackage::naElim(t = tabel.date)
k = names(tabel.date)[1:9] #ce variabile voi folosi
#aplicarea modelului
rezultat.ACP = princomp(x=tabel.date[,k],cor = TRUE)
#abateri standard componente = valori proprii ale matricei de corelatie
abatere.std.comp = rezultat.ACP$sdev #valorile eigen
#variantele componentelor = masura a imprastierii
varianta.comp = abatere.std.comp^2
varianta.comp
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
fisier = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Date Brute/DateNivelTrai.csv"
#data frame-ul folosit pentru a retine datele
tabel.date = read.csv(file = fisier)
cheieP = names(tabel.date)[1]
#citire fara numele coloanei 1
tabel.date = read.csv(file = fisier,row.names = 1)
#aliminare NA
tabel.date = adPackage::naElim(t = tabel.date)
k = names(tabel.date)[1:9] #ce variabile voi folosi
#aplicarea modelului
rezultat.ACP = princomp(x=tabel.date[,k],cor = TRUE)
#abateri standard componente = valori proprii ale matricei de corelatie
abatere.std.comp = rezultat.ACP$sdev #valorile eigen
#variantele componentelor = masura a imprastierii
varianta.comp = abatere.std.comp^2
varianta.comp
#tabelul cu variantele compenentelor (absolut, relativ, cumulat)
tabel.varianta = calcul.indicatori.varianta(varianta = varianta.comp);
write.csv(tabel.varianta,file = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Date Brute/Varianta.csv");
a=233;
#grafic varianta conform criteriului Kaiser
multiLinii(X = as.matrix(varianta.comp),titlu = "Plot varianta componente",titluY = "Varianta",legenda = FALSE)
#matricea de corelatie
matrice.corelatie = cor(tabel.date)
#corelograma - instalare pachet psych
psych::cor.plot(r=matrice.corelatie)
#preluare componente (nestandardizate)
C = rezultat.ACP$scores
write.csv(x = C,file = "Componente.csv")
rGraphics::scatterplot(X = list(C[,1:2]),
titlu = "Plot instante in spatiul 1X2 - Componente",
titluX = "Componenta 1",
titluY = "Componenta 2", asp=TRUE)
#corelograma - instalare pachet psych
psych::cor.plot(r=matrice.corelatie)
#matricea de corelatie
matrice.corelatie = cor(tabel.date)
#corelograma - instalare pachet psych
psych::cor.plot(r=matrice.corelatie)
#matricea de corelatie
matrice.corelatie = cor(tabel.date)
#corelograma - instalare pachet psych
psych::cor.plot(r=matrice.corelatie)
#corelograma - instalare pachet psych
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate - componente ")
#matricea de corelatie
matrice.corelatie = cor(tabel.date);
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile obseservate ")
install.packages("C:/Users/Antonia/Downloads/rGraphics_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("http://ip.ase.ro/adPackage_0.1.0.zip",repos = NULL,type = "win.binary" );
adPackage::verificare.pachete(p.loc = c("jGraphics","rGraphics"),
p.cran = c("dplyr","psych","sf"),
url.loc = "http://ip.ase.ro");
install.packages("C:/Users/Antonia/Downloads/rGraphics_0.1.0.tar.gz", repos = NULL, type = "source");
calcul.indicatori.varianta = function(varianta){
n = length(varianta)
varianta.cum = cumsum(varianta)
proc = varianta*100/n
procent.cum = cumsum(proc)
return(data.frame(Varianta = varianta,
Varianta.cumulata = varianta.cum,
Procent = proc,
Procent.cumulat = procent.cum))
}
corelograma1 = function(x,y=NULL,corelatii=TRUE,titlu=""){
if(!corelatii){
if(is.null(y)){
R = cor(x)
} else {
R = cor(x,y)
}
} else {
R = x
}
dev.new(noRStudioGD = TRUE)
psych::cor.plot(r = round(R,digits = 5),main = titlu)
}
multiLinii = function(X,titlu="",titluX="",titluY="",legenda=FALSE){
tryCatch(
{
dev.new(noRStudioGD = T)
ylim = range(X)
m = ncol(X)
n = nrow(X)
culori = rainbow(m)
plot(x = X[,1],xlab = titluX,ylab = titluY,main = titlu,type = "n",ylim = ylim,
xaxt="n",lwd=2)
axis(side = 1,at=1:n,labels = rownames(X),las=2)
for(i in 1:m){
lines(x = X[,i],col=culori[i],lwd=2)
}
if(legenda){
legend(locator(1),fill = culori,legend = names(X))
}
abline(h=1,col="green",lwd=2)
},
error=function(e){
stop(paste("Eroare trasare multilinii!",e))
}
)
points(x=X)
m = length(X)
d = X[1:(m-1)]-X[2:m]
eps = d[1:(m-2)]-d[2:(m-1)]
j = which(eps<0)
abline(h = X[j[1]+1],col="blue",lwd=2)
}
e=90
fisier = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Date Brute/DateNivelTrai.csv"
#data frame-ul folosit pentru a retine datele
tabel.date = read.csv(file = fisier)
cheieP = names(tabel.date)[1]
#citire fara numele coloanei 1
tabel.date = read.csv(file = fisier,row.names = 1)
#aliminare NA
tabel.date = adPackage::naElim(t = tabel.date)
k = names(tabel.date)[1:9] #ce variabile voi folosi
#aplicarea modelului
rezultat.ACP = princomp(x=tabel.date[,k],cor = TRUE)
#abateri standard componente = valori proprii ale matricei de corelatie
abatere.std.comp = rezultat.ACP$sdev #valorile eigen
#variantele componentelor = masura a imprastierii
varianta.comp = abatere.std.comp^2
#tabelul cu variantele compenentelor (absolut, relativ, cumulat)
tabel.varianta = calcul.indicatori.varianta(varianta = varianta.comp);
write.csv(tabel.varianta,file = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Varianta.csv");
a=233;
#grafic varianta conform criteriului Kaiser
multiLinii(X = as.matrix(varianta.comp),titlu = "Plot varianta componente",titluY = "Varianta",legenda = FALSE)
#matricea de corelatie
matrice.corelatie = cor(tabel.date);
#corelograma
corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
install.packages("psych")
#preluare componente (nestandardizate)
C = rezultat.ACP$scores
write.csv(x = C,file = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Componente.csv")
rGraphics::scatterplot(X = list(C[,1:2]),
titlu = "Plot instante in spatiul 1X2 - Componente",
titluX = "Componenta 1",
titluY = "Componenta 2", asp=TRUE)
#calcul scoruri (componente standardizate)
S = NULL
m = length(k)
for (j in 1:m) {
S = cbind(S,C[,j]/abatere.std.comp[j])
}
#asignare nume coloane cu cele din C
colnames(S) = colnames(C)
write.csv(x = S,file = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Scoruri.csv")
rGraphics::scatterplot(X = list(S[,1:2]),
titlu = "Plot instante in spatiul 1X2 - Scoruri",
titluX = "Componenta 1",
titluY = "COmponenta 2",
asp = TRUE)
source('C:/Users/Antonia/Desktop/Proiect Analiza Datelor/AnalizaDatelorRJava/incarcaDate.R')
#fisier = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Date Brute/DateNivelTrai.csv"
fisier = choose.files(multi = FALSE, filters = c("Fisiere csv", "*.csv"))
#data frame-ul folosit pentru a retine datele
tabel.date = read.csv(file = fisier)
tabel.date
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ",las=2)
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ",y = TRUE)
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ",y = TRUE)
psych::cor.plot(r=matrice.corelatie,ylas = 2)
psych::cor.plot(r=matrice.corelatie,cex = 0,65)
psych::cor.plot(r=matrice.corelatie,cex = 0.65)
psych::cor.plot(r=matrice.corelatie,cex =65)
psych::cor.plot(r=matrice.corelatie,ylas = 1)
psych::cor.plot(r=matrice.corelatie,ylas = 1)
psych::cor.plot(r=matrice.corelatie)
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
psych::cor.plot(r=matrice.corelatie)
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
?? corrplot
psych::cor.plot(r=matrice.corelatie,ylas = 2)
psych::cor.plot(r=matrice.corelatie,ylas = 2)
?? corrplot
psych::corPlot(r=matrice.corelatie,ylas = 2)
#matricea de corelatie
matrice.corelatie = cor(tabel.date);
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
psych::corPlot(r = matrice.corelatie,ylas = 2)
psych::corPlot(r = matrice.corelatie,ylas = 2)
rGraphics::corelograma2(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
corrgram::corrgram(x = matrice.corelatie,lower.panel = corrgram::panel.shade,upper.panel = corrgram::panel.pie,
main="sada",order = TRUE)
install.packages("corrgram")
corrgram::corrgram(x = matrice.corelatie,lower.panel = corrgram::panel.shade,upper.panel = corrgram::panel.pie,
main="sada",order = TRUE)
dev.new(noRStudioGD = TRUE)
psych::corr.p(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
psych::corr.p(x = matrice.corelatie,
title = "Corelograma variabile observate ")
dev.new(noRStudioGD = TRUE)
psych::corr.p(x = matrice.corelatie)
psych::corr.p(r = matrice.corelatie,
title = "Corelograma variabile observate ")
psych::corr.p(r = matrice.corelatie)
matrice.corelatie
psych::corr.p(r = round(matrice.corelatie,digits = 5))
psych::corr.plot(r = round(matrice.corelatie,digits = 5),main="hjh")
psych::cor.plot(r = round(matrice.corelatie,digits = 5),main="hjh")
dev.new(noRStudioGD = TRUE)
psych::cor.plot(r = round(matrice.corelatie,digits = 5),main="hjh")
dev.new(noRStudioGD = TRUE)
psych::cor.plot(r = round(matrice.corelatie,digits = 5),main="hjh",ylas = 2)
psych::cor.plot(r = round(matrice.corelatie,digits = 5),main="hjh",ylas = 0)
#matricea de corelatie
matrice.corelatie = cor(tabel.date);
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
dev.new(noRStudioGD = TRUE)
psych::cor.plot(r = round(matrice.corelatie,digits = 5),main="hjh",labels = TRUE)
psych::cor.plot(r = round(matrice.corelatie,digits = 5),main="hjh",labels = FALSE)
psych::cor.plot(r = round(matrice.corelatie,digits = 5),labels = TRUE,main="hjh")
?? cor.plot
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
)
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
#grafic varianta conform criteriului Kaiser
multiLinii(X = as.matrix(varianta.comp),titlu = "Plot varianta componente",titluY = "Varianta",legenda = FALSE)
rGraphics::corelograma1(x = Comm,corelatii = TRUE,titlu = "Corelograma comunalitati")
#fisier = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Date Brute/DateNivelTrai.csv"
fisier = choose.files(multi = FALSE, filters = c("Fisiere csv", "*.csv"))
#data frame-ul folosit pentru a retine datele
tabel.date = read.csv(file = fisier)
cheieP = names(tabel.date)[1]
#citire fara numele coloanei 1
tabel.date = read.csv(file = fisier,row.names = 1)
#aliminare NA
tabel.date = adPackage::naElim(t = tabel.date)
k = names(tabel.date)[1:9] #ce variabile voi folosi
#aplicarea modelului
rezultat.ACP = princomp(x=tabel.date[,k],cor = TRUE)
#abateri standard componente = valori proprii ale matricei de corelatie
abatere.std.comp = rezultat.ACP$sdev #valorile eigen
#variantele componentelor = masura a imprastierii
varianta.comp = abatere.std.comp^2
#'CALCULUL CORELATIILOR DINTRE COMPONENTE SI VARIABILE CAUZALE
#'= corelatii factoriale
#'matricea coeficientilor de lagatura intre
#'componente si variabilele cauzale
#'loadings = vectorii proprii ai matricei de corelatie
a = rezultat.ACP$loadings
R = NULL #matricea corelatiilor dintre componente si variabile
for (i in 1:m) {
R = cbind(R,a[,i]*abatere.std.comp[i])
}
#numele coloanelor din R
colnames(R) = paste("Comp.",1:m,sep = " ")
write.csv(x = R,file = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/CorelatiiFactoriale.csv")
#desenare corelograma
rGraphics::corelograma1(x = R,corelatii = TRUE,
titlu = "Corelograma variabile observate - componente ")
#fisier = "C:/Users/Antonia/Desktop/Proiect Analiza Datelor/ProiectAD/Date Brute/DateNivelTrai.csv"
fisier = choose.files(multi = FALSE, filters = c("Fisiere csv", "*.csv"))
#data frame-ul folosit pentru a retine datele
tabel.date = read.csv(file = fisier)
cheieP = names(tabel.date)[1]
#citire fara numele coloanei 1
tabel.date = read.csv(file = fisier,row.names = 1)
#aliminare NA
tabel.date = adPackage::naElim(t = tabel.date)
k = names(tabel.date)[1:9] #ce variabile voi folosi
#aplicarea modelului
rezultat.ACP = princomp(x=tabel.date[,k],cor = TRUE)
#abateri standard componente = valori proprii ale matricei de corelatie
abatere.std.comp = rezultat.ACP$sdev #valorile eigen
#variantele componentelor = masura a imprastierii
varianta.comp = abatere.std.comp^2
install.packages("C:/Users/Antonia/Desktop/MASTER sem 4/scripts/rGraphics_0.1.0.tar.gz", repos = NULL, type = "source");
#install.packages("psych");
calcul.indicatori.varianta = function(varianta){
n = length(varianta)
varianta.cum = cumsum(varianta)
proc = varianta*100/n
procent.cum = cumsum(proc)
return(data.frame(Varianta = varianta,
Varianta.cumulata = varianta.cum,
Procent = proc,
Procent.cumulat = procent.cum))
}
corelograma1 = function(x,y=NULL,corelatii=TRUE,titlu=""){
if(!corelatii){
if(is.null(y)){
R = cor(x)
} else {
R = cor(x,y)
}
} else {
R = x
}
dev.new(noRStudioGD = TRUE)
psych::cor.plot(r = round(R,digits = 5),main = titlu)
}
multiLinii = function(X,titlu="",titluX="",titluY="",legenda=FALSE){
tryCatch(
{
dev.new(noRStudioGD = T)
ylim = range(X)
m = ncol(X)
n = nrow(X)
culori = rainbow(m)
plot(x = X[,1],xlab = titluX,ylab = titluY,main = titlu,type = "n",ylim = ylim,
xaxt="n",lwd=2)
axis(side = 1,at=1:n,labels = rownames(X),las=2)
for(i in 1:m){
lines(x = X[,i],col=culori[i],lwd=2)
}
if(legenda){
legend(locator(1),fill = culori,legend = names(X))
}
abline(h=1,col="green",lwd=2)
},
error=function(e){
stop(paste("Eroare trasare multilinii!",e))
}
)
points(x=X)
m = length(X)
d = X[1:(m-1)]-X[2:m]
eps = d[1:(m-2)]-d[2:(m-1)]
j = which(eps<0)
abline(h = X[j[1]+1],col="blue",lwd=2)
}
e=90
#tabelul cu variantele compenentelor (absolut, relativ, cumulat)
tabel.varianta = calcul.indicatori.varianta(varianta = varianta.comp);
write.csv(tabel.varianta,file = "C:/Users/Antonia/Desktop/MASTER sem 4/ERP/scripts/Varianta.csv");
#grafic varianta conform criteriului Kaiser
multiLinii(X = as.matrix(varianta.comp),titlu = "Plot varianta componente",titluY = "Varianta",legenda = FALSE)
#matricea de corelatie
matrice.corelatie = cor(tabel.date);
#corelograma
rGraphics::corelograma1(x = matrice.corelatie,corelatii = TRUE,
titlu = "Corelograma variabile observate ")
#matricea de corelatie
matrice.corelatie = cor(tabel.date);
View(matrice.corelatie)
corrplot(matrice.corelatie, method="circle")
install.packages("corrplot")
corrplot(matrice.corelatie, method="circle")
corrplot::corrplot(matrice.corelatie, method="circle")
corrplot::corrplot(matrice.corelatie, method="circle")
corrplot::corrplot(matrice.corelatie, method="circle")
corrplot::corrplot(matrice.corelatie, method="circle")
corrplot::corrplot(matrice.corelatie, method="circle")
